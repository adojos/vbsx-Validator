<html> 
 <head> 
 <meta http-equiv="Content-Type" content="text/html; charset=windows-1252"> 
 <title>VBSX_Validator</title> 
 <script language="vbscript"> 
   Option Explicit 
   Dim inputxsdns
	Dim xml
	Dim xsd
   'Form validation on validate button
 '---------------------- 
   Sub btnvalidate_OnClick 
        Dim TheForm 
        Set TheForm = Document.forms("Form1") 
        If TheForm.Site.Value="" Then 
           Msgbox "Please select files" 
       
        End If 
End Sub 
'-------------------------
'call function to select single XML file
Sub OnClickButtonselectXML()
  Call ChooseXMLFile( )  
End Sub 

'call function to select XSD file 
Sub OnClickButtonselectXSD() 
 call ChooseXSDFile()
 Call InputSchema()
  
 
  
  
End Sub

'using this section of code on GetFiles button,It selects folder and extracr all the files in text area.
'-----------------------------
   Sub MainGetFiles() 
       Dim strRootPath : strRootPath = BrowseForFolder 
        
       window.document.getElementById("root_path").value = strRootPath 
        
       ClearFileList() 
        
       If strRootPath <> "" Then 
           AddToFileList GetFiles(strRootPath) 
       End If 
   End Sub 
 '------------------------------
 'this function is used to clear existing file list on another selection   
   Sub ClearFileList() 
       Dim objFileList : Set objFileList = window.document.getElementById("folder_files") 
       Dim intIndex 
       For intIndex = objFileList.Length - 1 To 0 Step -1 
           objFileList.Remove(intIndex) 
       Next 
   End Sub 
' show all the files of selected folder in text area    
   Sub AddToFileList(dictFiles) 
       Dim objFileList : Set objFileList = window.document.getElementById("folder_files") 
       Dim strFilePath, objOption 
       For Each strFilePath In dictFiles.Keys 
           Set objOption = window.document.createElement("option") 
           objOption.text = strFilePath 
           objOption.value = strFilePath 
            
           objFileList.Add(objOption) 
       Next 
   End Sub 
 ' Stores users selection in variable 
 '-------------------------------------------
    Function GetFiles(strPath) 
        Dim dictFiles : Set dictFiles = CreateObject("Scripting.Dictionary") 
        Dim objFSO : Set objFSO = CreateObject("Scripting.FileSystemObject") 
         
        If objFSO.FolderExists(strPath) Then 
            Dim objFolder : Set objFolder = objFSO.GetFolder(strPath) 
            Dim objFile 
            For Each objFile In objFolder.Files 
                dictFiles.Add objFile.Path, objFile.Name 
            Next 
        End If 
         
        Set GetFiles = dictFiles 
    End Function 
  '---------------------------------------------
  ' Invoked on click of validate button .To validate XML file against xsd(single or multiple)    
   Sub validate() 
   
       Dim objOption 
       For Each objOption In window.document.getElementById("folder_files").options 
           If objOption.Selected Then 
               xml= objOption.Value 
               If xsd="" Then 
           Msgbox "Please select XSD file" 
           else
               Call LoadXMLDocument(xml,xsd, inputxsdns)
              End if 
           End If 
       Next 
   End Sub 
  'select folder form local drive   
   Function BrowseForFolder 
    
       Const BIF_NEWDIALOGSTYLE  = &H40 
       Const ssfDRIVES = &H11 
    
       Dim objShell : Set objShell = CreateObject("Shell.Application") 
       Dim objFolder : Set objFolder = objShell.BrowseForFolder(0, "Select Root Folder with XML files ", BIF_NEWDIALOGSTYLE, ssfDRIVES) 
        
       If Not objFolder Is Nothing Then 
           BrowseForFolder = objFolder.Self.Path 
       Else  
           BrowseForFolder = "" 
       End If 
       Dim Cancel
        If BrowseForFolder = "" Then 
   Cancel = MsgBox("Are you sure you want to cancel setup ?",4,"Cancel Setup?") 
    If Cancel = vbYes Then 
     window.close
    ElseIf Cancel = vbNo Then 
     Call BrowseForFolder
    Else 
    End If 
  Else 
  End If 
 End Function 
'to select single xml file from local drive 
 Function ChooseXMLFile( )
    On Error Resume Next
    Dim objIE, strSelected
   ChooseXMLFile = ""
    Set objIE = CreateObject( "InternetExplorer.Application" )
    objIE.visible = False
    objIE.Navigate( "about:blank" )
    Do Until objIE.ReadyState = 4
    Loop
    objIE.Document.Write "<HTML><BODY><INPUT ID=""FileSelect"" NAME=""FileSelect"" TYPE=""file""><BODY></HTML>"
   
    With objIE.Document.all.FileSelect
        .focus
        .click
        strSelected = .value
    End With
    objIE.Quit
    Set objIE = Nothing
    dim Cancel
    ChooseXMLFile = strSelected 
    If ChooseXMLFile = "" Then 
   Cancel = MsgBox("Are you sure you want to cancel setup ?",4,"Cancel Setup?") 
    If Cancel = vbYes Then 
     window.close
    ElseIf Cancel = vbNo Then 
     Call ChooseXMLFile() 
    Else 
    End If 
  Else 
  End If 
    Dim objFile : Set objFile = window.document.getElementById("folder_files") 
       Dim  objOption 
       
           Set objOption = window.document.createElement("option") 
           objOption.text = ChooseXMLFile 
           objOption.value = ChooseXMLFile 
           
           objFile.Add(objOption)     
   'xml = ChooseXMLFile       
End Function

 Function ChooseXSDFile( )
' Select File dialog based on a script by Mayayana
' Known issues:
' * Tree view always opens Desktop folder
' * In Win7/IE8 only the file NAME is returned correctly, the path returned will always be C:\fakepath\
' * If a shortcut to a file is selected, the name of that FILE will be returned, not the shortcut's
    On Error Resume Next
    Dim objIE1, strSelected1
    ChooseXSDFile = ""
    Set objIE1 = CreateObject( "InternetExplorer.Application" )
    objIE1.visible = False
    objIE1.Navigate( "about:blank" )
    Do Until objIE1.ReadyState = 4
    Loop
    objIE1.Document.Write "<HTML><BODY><INPUT ID=""FileSelect"" NAME=""FileSelect"" TYPE=""file""><BODY></HTML>"
   
    With objIE1.Document.all.FileSelect
        .focus
        .click
        strSelected1 = .value
    End With
    objIE1.Quit
    Set objIE1 = Nothing
    ChooseXSDFile = strSelected1
    Dim cancel
   xsd = ChooseXSDFile
    If xsd = "" Then 
   Cancel = MsgBox("Are you sure you want to cancel setup ?",4,"Cancel Setup?") 
    If Cancel = vbYes Then 
     window.close
    ElseIf Cancel = vbNo Then 
     Call ChooseXSDFile() 
    Else 
    End If 
  Else 
  End If 
End Function

Function FileExists(filename)
 Dim objFSO2
 
 'Create Object for FileSystem
 Set objFSO2 = CreateObject("Scripting.FileSystemObject")
 
 'Verify the specified file exists
 If objFSO2.FileExists(filename) Then
  FileExists = True
 Else 
  FileExists = False
 End If
 
 Set objFSO2 = Nothing
End Function

Function LoadXMLDocument(fileName, xsd, xsdns)
 Dim objDOM, objSchema, loadStatus
Dim xmlParseErr, objXMLDocSchemaCache, xmlXSDError
 
 'Create Object for MSXML
 Set objDOM = CreateObject("MSXML2.DOMDocument.6.0") 
 Set objXMLDocSchemaCache = CreateObject("Msxml2.XMLSchemaCache.6.0")
 
 'Add the XSD file to SchemCache object
 objXMLDocSchemaCache.add xsdns, xsd 
 
 'Set the DOM variables
 objDOM.async = False
 objDOM.validateOnParse = True
 objDOM.resolveExternals = True
 
 'Set the loaded XSD to DOM and load XML to DOM
 Set objDOM.schemas = objXMLDocSchemaCache 
 loadStatus = objDOM.Load(fileName) 
 Set xmlParseErr = objDOM.parseError
 
 'verify that XML is validated aganist Schema and loaded successfully
 If xmlParseErr.errorCode <> 0 Then
  Msgbox  xmlParseErr.reason, vbCritical
 Else  
  Set xmlXSDError = objDOM.validate
  If xmlXSDError.errorCode <> 0 Then
   MsgBox xmlXSDError.reason, vbCritical
  Else
   Msgbox "Successfully validated the XML aganist XSD", vbInformation 
  End If
 End If
 
 Set objDOM = Nothing
 Set objXMLDocSchemaCache = Nothing
End Function

Function InputSchema()
Dim cancel
 inputxsdns = InputBox("NameSpace of XSD file entered : ", "Enter XSD namespace URI")
  If inputxsdns = "" Then 
   Cancel = MsgBox("Are you sure you want to cancel setup ?",4,"Cancel Setup?") 
    If Cancel = vbYes Then 
     window.close
    ElseIf Cancel = vbNo Then 
     Call InputSchema() 
    Else 
    End If 
  Else 
  End If 
End Function 
 </script> 
 <hta:application 
   applicationname="VBSX_Validator"     
   border="dialog" 
   borderstyle="normal" 
   caption="VBSX_Validator" 
   contextmenu="yes" 
   icon="" 
   maximizebutton="no" 
   minimizebutton="yes" 
   navigable="no" 
   scroll="no" 
   selection="yes" 
   showintaskbar="yes" 
   singleinstance="yes" 
   sysmenu="yes" 
   version="1.0" 
   windowstate="normal" 
 > 
 </head> 
 <body> 
<form name="Form1">
   <div style="width:100%; height:25px; border:medium; border-color:#000000; background-color:#000066; text-align:left; font-size:20px; color:#FFFFFF;">
   <i>Testoxide</i></div> <hr>
   <div align="center">
<h3>VBSX_Validator_v1.1.2</h3>
November 2013<br />
Copyright (c) Tushar Sharma |<span style="color:#000099;">www.testoxide.com</span>
</div><hr>
   <div>
   
   Browse for Single File:
   &nbsp;&nbsp;&nbsp;&nbsp;<input type="button" name="selectXML" id="selectXML" value="Select XML file" onclick="OnClickButtonselectXML"><br>
  <span style="margin-left:50px;font-size:12px;">OR</span><br>
  Browse for Root Folder:&nbsp;&nbsp; 
       <input type="text" id="root_path" readonly size="50">&nbsp;&nbsp; 
       <input type="button" value="Get Files" onclick="MainGetFiles()"> 
   <br> 
   <br> 
   Select Files:(Hold ctrl key to select multiple files)<br> 
   <select id="folder_files" multiple size="5" name="Site" ></select> 
   <br> 
   <br> 
   <input type="button" value="Select XSD to validate XML" onclick="OnClickButtonselectXSD()" name="btnxsd"> 
   
   <input type="button" value="Validate" onclick="validate()" name="btnvalidate"> 
   </div>
  
  <hr>
  <h4>VBSX_Validator 2013-2014 Tushar Sharma | <span style="color:#000099;">www.testoxide.com</span></h4>
  Contact- projects@testoxide.com
 </form>
 </body> 
 </html> 
